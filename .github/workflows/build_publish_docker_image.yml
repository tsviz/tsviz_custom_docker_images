name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      packages: write
      id-token: write
      security-events: write

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers # Cache the Docker layers to speed up the build
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }} # Cache the Docker layers based on the Dockerfile changes
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Build Docker image
      id: build_image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: false
        load: true # Load the built image so that it can be used in the next steps
        tags: |
            ghcr.io/tsviz/tsvi-spring-test:latest
            ghcr.io/tsviz/tsvi-spring-test:${{ github.sha }}
            ghcr.io/tsviz/tsvi-spring-test:${{ github.ref_name }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Test the Docker image
      run: |
        echo "Testing the Docker image..."
        echo "Running the Docker image..."
        docker run -d --name test-container ghcr.io/tsviz/tsvi-spring-test:${{ github.sha }}
        
        echo "----------------------------------------"
        echo "1. Checking the OS..."
        echo "Command: docker exec test-container sh -c \"cat /etc/*release | grep ^ID\""
        docker exec test-container sh -c "cat /etc/*release | grep ^ID"
        echo "----------------------------------------"
        
        echo "2. Listing all installed packages using rpm..."
        echo "Command: docker exec test-container sh -c \"rpm -qa | sort | awk 'BEGIN {print \"Package Name\"} {print NR \": \" \$1}' | column -t\""
        docker exec test-container sh -c "rpm -qa | sort | awk 'BEGIN {print \"Package Name\"} {print NR \": \" \$1}' | column -t"
        echo "----------------------------------------"
        
        echo "3. Checking the Maven version..."
        echo "Command: docker exec test-container mvn -v"
        docker exec test-container mvn -v
        echo "----------------------------------------"
        
        echo "4. Checking the jq version..."
        echo "Command: docker exec test-container jq --version"
        docker exec test-container jq --version
        echo "----------------------------------------"
        
        echo "5. Checking the curl version..."
        echo "Command: docker exec test-container curl --version"
        docker exec test-container curl --version
        echo "----------------------------------------"
        
        echo "6. Stopping and removing the Docker container..."
        echo "Command: docker stop test-container"
        docker stop test-container
        echo "Command: docker rm test-container"
        docker rm test-container
        echo "----------------------------------------"
    
    - name: Push the Docker image to GitHub Container Registry
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
            ghcr.io/tsviz/tsvi-spring-test:latest
            ghcr.io/tsviz/tsvi-spring-test:${{ github.sha }}
            ghcr.io/tsviz/tsvi-spring-test:${{ github.ref_name }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: "Release ${{ github.ref_name }} of the Docker image - tsvi-spring-test - built and pushed to GitHub Container Registry. Direct link to the image: [ghcr.io/tsviz/tsvi-spring-test:${{ github.ref_name }}](https://ghcr.io/tsviz/tsvi-spring-test:${{ github.ref_name }})"